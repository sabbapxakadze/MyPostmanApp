<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCADIAWQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9NdlFP8j/AGaNlADKKm2UbKAIdlP2U+jZQAz/AIDT9lGynbP9
        mgBuyjZ/s06igARKmpiVLQAJUyJ89FO+4nzUADuiJuase5uWuW/2KfeXn2l9q/cqvQAUUUUAFFFFABRR
        81FABT6KdQAbKKNlP2UACJQ77aHfYtV/v0AFFFFABRRRQAUUbKfQAyiin0AM2UUP9+igAooooAKKKKAC
        iiigAooooAt7Kds30/a1GygBmyn7Kfso2UAMo2VLso2UARbWop7uqL81V3fznoAN++np9ykSnpQA9KlR
        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
        TNlFFAD9lP2UUUAGyiiigD//2Q==
</value>
  </data>
</root>